@model AirMiles.FrontOffice.Models.Account.EditViewModel

@{
    
    ViewData["Title"] = "Edit";
}

<!-- Inbox area Start-->
<div class="inbox-area">
    <div class="container">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="view-mail-list sm-res-mg-t-30">
                <!-- Contact area Start-->
                <div class="contact-area">
                    <div class="area">
                        <div class="contact">
                           
                                <input type="file" id="upload" style="display:none" />
                                <input type="hidden" id="clientID" asp-for="ClientID" />
                                <img src="@Url.Content(Model.PhotoUrl)" id="user_photo">
                            <div class="contactInfo">
                                <p id="fullName">@Html.DisplayFor(model => model.FullName)</p>
                                <p class="contactTitle">Client Number<span>@Html.DisplayFor(model => model.ClientID)</span></p>
                                <p class="contactTitle">BirthDate<span>@Html.DisplayFor(model => model.BirthDate)</span></p>
                                <p class="contactTitle">Status<span>@Html.DisplayFor(model => model.Status)</span></p>
                            </div>
                            <button type="submit" id="edit" onclick="editInfo()">
                                UPDATE INFORMATION
                            </button>
                        </div>
                        <div class="subArea">
                            <div class="section">
                                <p class="sectionTitle">Miles</p>
                                <div class="info">
                                    <p>@Html.DisplayNameFor(model => model.StatusMiles)<span>@Html.DisplayFor(model => model.StatusMiles)</span></p>

                                    <p>@Html.DisplayNameFor(model => model.BonusMiles)<span>@Html.DisplayFor(model => model.BonusMiles)</span></p>

                                    <p>@Html.DisplayNameFor(model => model.BoughtMiles)<span>@Html.DisplayFor(model => model.BoughtMiles)</span></p>

                                    <p>@Html.DisplayNameFor(model => model.ProlongedMiles)<span>@Html.DisplayFor(model => model.ProlongedMiles)</span></p>

                                    <p>@Html.DisplayNameFor(model => model.TransferedMiles)<span>@Html.DisplayFor(model => model.TransferedMiles)</span></p>
                                </div>
                            </div>
                            <div class="fitSection">
                                <div class="section">
                                    <p class="sectionTitle">Contact</p>
                                    <div class="info">
                                        <p>@Html.DisplayNameFor(model => model.Email)<span>@Html.DisplayFor(model => model.Email)</span></p>
                                    </div>
                                </div>
                                <div class="section">
                                    <p class="sectionTitle">Extra Info</p>
                                    <div class="info">
                                        <p>@Html.DisplayNameFor(model => model.TotalFlights)<span>@Html.DisplayFor(model => model.TotalFlights)</span></p>
                                        <p>@Html.DisplayNameFor(model => model.RevisionMonth)<span>@Html.DisplayFor(model => model.RevisionMonth)</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Inbox area End-->
<script type="text/javascript">
    var uploader = document.getElementById("upload");
    document.getElementById("user_photo").addEventListener('click', function (event)
    {
        uploader.click();

        event.preventDefault;
    });
    uploader.onchange = function () {

        var formData = new FormData();
        formData.append('photo', $('#upload')[0].files[0]); // myFile is the input type="file" control

        formData.append('clientID', $("#clientID").val());

        var _url = '@Url.Action("Edit", "Account")';

        $.ajax({
            url: _url,
            type: 'POST',
            data: formData,
            processData: false,  // tell jQuery not to process the data
            contentType: false,  // tell jQuery not to set contentType
            success: function (result) {
                window.location.reload();
            },
            error: function (jqXHR) {
            },
            complete: function (jqXHR, status) {
            }
        });
    };

    async function editInfo() {


        const { value } = await Swal.fire({
            showCancelButton: true,
            html:
                '<h2>Edit Information</h2>' +
                '<h3>First Name</h3>' +
                '<input id="swal-FirstName" value="@Model.FirstName" class="swal2-input">' +
                '<h3>Last Name</h3>' +
                '<input id="swal-LastName" value="@Model.LastName" class="swal2-input">' +
                '<h3>BirthDate</h3>' +
                '<input type="date" id="swal-BirthDate" value="@Model.BirthDate.Value.ToString("yyyy-MM-dd")" class="swal2-input">',
            focusConfirm: false,
            preConfirm: (firstName, lastName, birthdate) => {
                let nameRegex = new RegExp('[a-zA-Z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F]{2,50}')

                if ($('#swal-FirstName').val() == '' || $('#swal-LastName').val() == '' || $('#swal-BirthDate').val() == '') {
                    Swal.showValidationMessage("Enter a value in all fields");
                    return false;
                }
                if ( !nameRegex.test($('#swal-FirstName').val()) ) {
                    Swal.showValidationMessage("Invalid First Name");
                    return false;
                }
                if ( !nameRegex.test($('#swal-LastName').val()) ) {
                    Swal.showValidationMessage("Invalid Last Name");
                    return false;
                }
                else {                                        

                    const formValues = { firstName: $('#swal-FirstName').val(), lastName: $('#swal-LastName').val(), birthDate: $('#swal-BirthDate').val() };
                    $.ajax({
                        async: false,
                        url: '@Url.Action("EditInfo", "Account")',
                        type: 'POST',
                        data: formValues,
                        success: function (result) {
                            Swal.fire(
                                'Success!',
                                'Personal Information Updated!',
                                'success'
                            ).then((result) => {
                                window.location.reload(true);
                            });
                        },
                        error: function (jqXHR) {
                            Swal.fire(
                                jqXHR.status.toString(),
                                jqXHR.responseText,
                                'error'
                            )
                        },
                    })
                }
            }
        })
    }
</script>

<style>
    .area {
        display: grid;
        grid-template-rows: auto auto;
       
        
    }

    .contact {
        display: grid;
        grid-template-columns: 1fr 1fr 4fr;
        background-image: url( @Model.BackgroundPath );
        border-radius: 10px
    }

    .contact img {
            height: 150px;
            width: 150px;
            margin-left: 20px;
            align-self: center;
            border-radius: 50%;
    }

    .contactInfo {
        width: auto;
        margin: 0 auto auto 20px;
    }

    #fullName {
        font-size: x-large;
    }

    .contact p {
        font-weight: bold;
        font-size: larger;
    }

    .contact span {
        margin-left: 10px;
        font-size: large;
        font-weight: normal;
    }

    .contact button {
        color: white;
        background-color: black;
        font-weight: bold;
        height: auto;
        width: auto;
        justify-self: end;
        border-radius:10px;
        margin: 15px 20px auto auto;
    }

    .subArea {
        display: grid;
        grid-template-columns: 1fr 1fr;
        height: auto;
        grid-template-rows: auto;
        grid-column-gap: 20px
    }

    .section {
        border: 2px solid grey;
        border-radius: 5px;
        margin: 10px 0 10px 0;
    }

    .sectionTitle {
        font-size: x-large;
    }

    .section p {
        padding-bottom: 10px;
        padding-left: 5px;
    }

    .fitSection :last-child {
        margin-top: 25px;
    }

    .info p {
        font-weight: bold;
        border-bottom: 1px solid black;
    }

    .info span {
        margin-left: 10%;
        font-weight: normal;
    }

    .info :last-child {
        padding-bottom: 0;
        border-bottom: 0;
    }
</style>